/*
 * Token Tracker Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@gemini-commerce.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = tokentracker.Client.OpenAPIDateConverter;

namespace tokentracker.Model
{
    /// <summary>
    /// StripeEventData
    /// </summary>
    [DataContract(Name = "StripeEventData")]
    public partial class StripeEventData : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="StripeEventData" /> class.
        /// </summary>
        /// <param name="varObject">varObject.</param>
        /// <param name="previousAttributes">previousAttributes.</param>
        /// <param name="raw">raw.</param>
        public StripeEventData(Object varObject = default(Object), Object previousAttributes = default(Object), string raw = default(string))
        {
            this.VarObject = varObject;
            this.PreviousAttributes = previousAttributes;
            this.Raw = raw;
        }

        /// <summary>
        /// Gets or Sets VarObject
        /// </summary>
        [DataMember(Name = "object", EmitDefaultValue = false)]
        public Object VarObject { get; set; }

        /// <summary>
        /// Gets or Sets PreviousAttributes
        /// </summary>
        [DataMember(Name = "previousAttributes", EmitDefaultValue = false)]
        public Object PreviousAttributes { get; set; }

        /// <summary>
        /// Gets or Sets Raw
        /// </summary>
        [DataMember(Name = "raw", EmitDefaultValue = false)]
        public string Raw { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class StripeEventData {\n");
            sb.Append("  VarObject: ").Append(VarObject).Append("\n");
            sb.Append("  PreviousAttributes: ").Append(PreviousAttributes).Append("\n");
            sb.Append("  Raw: ").Append(Raw).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
